REPORT ZR2.
*TABLES: t001k,s032,makt.

TYPES: BEGIN OF ty_t001k,
         bwkey TYPE t001k-bwkey,
         bukrs TYPE t001k-bukrs,
       END OF ty_t001k.
*
TYPES : BEGIN OF ty_mbew,
          bwkey TYPE mbew-bwkey,
        END OF ty_mbew.
*
TYPES: BEGIN OF ty_s032,
         lgort    TYPE s032-lgort,
         matnr    TYPE s032-matnr,
         basme    TYPE s032-basme,
         mtart    TYPE s032-mtart,
         matkl    TYPE s032-matkl,
         mbwbest  TYPE s032-mbwbest,
         wbwbest  TYPE s032-wbwbest,
         werks    TYPE s032-werks,
         letztbew TYPE s032-letztbew,
       END OF ty_s032.
*
TYPES: BEGIN OF ty_makt,
         matnr TYPE makt-matnr,
         maktx TYPE makt-maktx,
       END OF ty_makt.
*
DATA : wa_t001k TYPE ty_t001k,
       it_t001k TYPE TABLE OF ty_t001k.
*
DATA : wa_s032 TYPE ty_s032,
       it_s032 TYPE TABLE OF  ty_s032.
*
DATA : wa_makt TYPE ty_makt,
       it_makt TYPE TABLE OF ty_makt.
*
*DATA : wa_final TYPE ty_final,
*       it_final TYPE TABLE OF ty_final.
*
DATA : wa_zfi_aging_str TYPE zfi_aging_str,
       it_zfi_aging_str TYPE TABLE OF zfi_aging_str.
*
DATA : fcat_grid    TYPE slis_t_fieldcat_alv,
       wa_fcat_grid LIKE LINE OF fcat_grid,
       wa_layout    TYPE slis_layout_alv.
*
DATA : lv_bukrs TYPE t001k-bukrs.
DATA : lv_bwkey TYPE t001k-bwkey.
*
DATA : lv_date  TYPE s032-letztbew.
DATA : lv_lgort TYPE s032-lgort.
DATA : lv_mtart TYPE s032-mtart.
DATA : lv_matkl TYPE s032-matkl.

DATA: lv_fpname TYPE fpname,
      lv_fmname TYPE funcname.
DATA: lv_params  TYPE sfpoutputparams,
*        /1bcdwb/docparams  TYPE sfpdocparams,
*        /1bcdwb/formoutput TYPE  fpformoutput,
      lv_printer TYPE  char7 VALUE 'PRINTER',
      lv_pdf     TYPE  char3 VALUE 'PDF'.
DATA: ls_doc_param  TYPE sfpdocparams,
      lv_formoutput TYPE fpformoutput.



SELECTION-SCREEN:BEGIN OF BLOCK b1.

PARAMETERS     : alv_grid RADIOBUTTON GROUP r1 DEFAULT 'X'.
PARAMETERS     : form RADIOBUTTON GROUP r1.
PARAMETERS     : p_date   TYPE  s032-letztbew.
SELECT-OPTIONS : s_comp   FOR   lv_bukrs.
SELECT-OPTIONS : s_plant  FOR   lv_bwkey.
SELECT-OPTIONS : s_loc    FOR   lv_lgort.
SELECT-OPTIONS : s_type   FOR   lv_mtart.
SELECT-OPTIONS : s_grp    FOR   lv_matkl.

SELECTION-SCREEN: END OF BLOCK b1.

START-OF-SELECTION.
*
  SELECT
        bwkey
        bukrs
    FROM t001k
    INTO TABLE it_t001k
    WHERE bukrs IN s_comp
    AND   bwkey IN s_plant.

  SELECT
      lgort
      matnr
      basme
      mtart
      matkl
      mbwbest
      wbwbest
      werks
      letztbew
  FROM s032
  INTO TABLE it_s032
  FOR ALL ENTRIES IN it_t001k
  WHERE   werks = it_t001k-bukrs
    AND  letztbew LE p_date
    AND  lgort   IN s_loc
    AND  mtart   IN s_type
    AND  matkl   IN s_grp
    AND  werks   IN s_plant
    and mbwbest gt 0.
*
  SELECT
            matnr
            maktx
      FROM makt
      INTO TABLE it_makt.
*
  SORT it_s032 BY matnr ASCENDING lgort DESCENDING.
    LOOP AT it_s032 INTO wa_s032.
*
      wa_zfi_aging_str-lgort   = wa_s032-lgort.
      wa_zfi_aging_str-matnr   = wa_s032-matnr.
      wa_zfi_aging_str-basme   = wa_s032-basme.
      wa_zfi_aging_str-mtart   = wa_s032-mtart.
      wa_zfi_aging_str-matkl   = wa_s032-matkl.
      wa_zfi_aging_str-mbwbest = wa_s032-mbwbest.
      wa_zfi_aging_str-wbwbest = wa_s032-wbwbest.
*
    READ TABLE it_t001k INTO wa_t001k WITH KEY bukrs = wa_s032-werks.
*
    IF sy-subrc = 0.
      wa_zfi_aging_str-bwkey  = wa_t001k-bwkey.
      wa_zfi_aging_str-bukrs  = wa_t001k-bukrs.

    ENDIF.
*
*
    READ TABLE it_makt INTO wa_makt WITH KEY matnr = wa_s032-matnr.
*
    IF sy-subrc = 0.
      wa_zfi_aging_str-maktx  = wa_makt-maktx.
    ENDIF.
*
    APPEND wa_zfi_aging_str TO it_zfi_aging_str."wa_ZFI_AGING_STR
    CLEAR :wa_zfi_aging_str, wa_t001k, wa_makt.
  ENDLOOP.

*
  IF alv_grid = 'X'.
    wa_fcat_grid-fieldname   = 'BUKRS'.
    wa_fcat_grid-seltext_l   = 'company'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'BWKEY'.
    wa_fcat_grid-seltext_l   = 'plant'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'LGORT'.
    wa_fcat_grid-seltext_l   = 'storage loc'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'MATNR'.
    wa_fcat_grid-seltext_l   = 'material no'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'MAKTX'.
    wa_fcat_grid-seltext_l   = 'des'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'MTART'.
    wa_fcat_grid-seltext_l   = 'material type'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'MATKL'.
    wa_fcat_grid-seltext_l   = 'mat grp'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'BASME'.
    wa_fcat_grid-seltext_l   = 'unit'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'MBWBEST'.
    wa_fcat_grid-seltext_l   = 'quantity'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    wa_fcat_grid-fieldname   = 'WBWBEST'.
    wa_fcat_grid-seltext_l   = 'value'.
    wa_fcat_grid-cfieldname  =  'WAERS'.
    APPEND wa_fcat_grid TO fcat_grid.
    CLEAR  wa_fcat_grid.
*
    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
*       I_INTERFACE_CHECK                 = ' '
*       I_BYPASSING_BUFFER                = ' '
*       I_BUFFER_ACTIVE                   = ' '
*       I_CALLBACK_PROGRAM                = ' '
*       I_CALLBACK_PF_STATUS_SET          = ' '
*       I_CALLBACK_USER_COMMAND           = ' '
*       I_CALLBACK_TOP_OF_PAGE            = ' '
*       I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*       I_CALLBACK_HTML_END_OF_LIST       = ' '
*       I_STRUCTURE_NAME                  =
*       I_BACKGROUND_ID                   = ' '
*       I_GRID_TITLE                      =
*       I_GRID_SETTINGS                   =
        is_layout   = wa_layout
        it_fieldcat = fcat_grid
*       IT_EXCLUDING                      =
*       IT_SPECIAL_GROUPS                 =
*       IT_SORT     =
*       IT_FILTER   =
*       IS_SEL_HIDE =
*       I_DEFAULT   = 'X'
*       I_SAVE      = ' '
*       IS_VARIANT  =
*       IT_EVENTS   =
*       IT_EVENT_EXIT                     =
*       IS_PRINT    =
*       IS_REPREP_ID                      =
*       I_SCREEN_START_COLUMN             = 0
*       I_SCREEN_START_LINE               = 0
*       I_SCREEN_END_COLUMN               = 0
*       I_SCREEN_END_LINE                 = 0
*       I_HTML_HEIGHT_TOP                 = 0
*       I_HTML_HEIGHT_END                 = 0
*       IT_ALV_GRAPHICS                   =
*       IT_HYPERLINK                      =
*       IT_ADD_FIELDCAT                   =
*       IT_EXCEPT_QINFO                   =
*       IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*       E_EXIT_CAUSED_BY_CALLER           =
*       ES_EXIT_CAUSED_BY_USER            =
      TABLES
        t_outtab    = it_zfi_aging_str
* EXCEPTIONS
*       PROGRAM_ERROR                     = 1
*       OTHERS      = 2
      .
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.
  ENDIF.

  lv_fpname = 'ZFI_F_AGING'.

  IF form = 'X'.

    TRY.
        CALL FUNCTION 'FP_FUNCTION_MODULE_NAME'
          EXPORTING
            i_name     = lv_fpname
          IMPORTING
            e_funcname = lv_fmname.
*   E_INTERFACE_TYPE           =
*   EV_FUNCNAME_INBOUND        =

      CATCH cx_fp_api_repository cx_fp_api_usage cx_fp_api_internal.
        MESSAGE ID 'FPAPIGENERIC' TYPE 'E' NUMBER '000' WITH lv_fmname.
    ENDTRY          .
*
    lv_params-preview  = abap_true.
    lv_params-nodialog = abap_true.
    lv_params-device   = lv_printer.
    lv_params-dest     = 'LP01'."C_PDF.
*
    CALL FUNCTION 'FP_JOB_OPEN'
      CHANGING
        ie_outputparams = lv_params
      EXCEPTIONS
        cancel          = 1
        usage_error     = 2
        system_error    = 3
        internal_error  = 4
        OTHERS          = 5.
*
    CALL FUNCTION lv_fmname "'/1BCDWB/SM00001331'
      EXPORTING
*       /1BCDWB/DOCPARAMS        =
        company1       = s_comp-high
        plant1         = s_plant-high
        location1      = s_loc-high
        type1          = s_type-high
        grp1           = s_grp-high
        grp            = s_grp-low
        type           = s_type-low
        location       = s_loc-low
        plant          = s_plant-low
        company        = s_comp-low
        date           = p_date
        zfinal         = it_zfi_aging_str
* IMPORTING
*       /1BCDWB/FORMOUTPUT       =
      EXCEPTIONS
        usage_error    = 1
        system_error   = 2
        internal_error = 3
        OTHERS         = 4.
*
    CALL FUNCTION 'FP_JOB_CLOSE'
* IMPORTING
*   E_RESULT             =
      EXCEPTIONS
        usage_error    = 1
        system_error   = 2
        internal_error = 3
        OTHERS         = 4.
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.
  ENDIF.